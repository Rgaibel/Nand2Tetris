// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
	field Array str; //my string is represented as an array
	field int length;

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
		if(maxLength = 0) {	//Array size must be positive!
			let maxLength = 1;
		}
		let str = Array.new(maxLength);
		let length = 0;
		return this;
    }

    /** Disposes this string. */
    method void dispose() {
		do Memory.deAlloc(str);
		return;
    }

    /** Returns the current length of this string. */
    method int length() {
		return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
		return str[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
		let str[j] = c;
		return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
		let str[length] = c;
		let length = length + 1;
		return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
		let length = length - 1;
		return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
		var int i, x;
		let x = 0;
		let i = 0;
		if(str[0] = 45) {	//if the first char is '-' (45=='-') , I want to start my loop from str[1]. So I increase i
			let i = 1;
		}
		while(i < length) {
			let x = (x * 10) + (str[i] - 48);	//(48 == '0') I subtract by 0 to get a numeric value
			let i = i + 1;
		}
		if(str[0] = 45){
			return (-1)*x;
		}
		return x;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
		let length = 0;	//by setting length to 0 I'm clearing the screen, so the values in the RAM can be over written
		if(val < 0) {	//if the val is negative I make it positive
			let val = -val;
			do appendChar(45); //and I write the negative at the start of the string
		}
		do int2String(val);
		return;
	}
	
	
	method void int2String(int val) {//slide 115
		var int lastDigit, c;
		
		let lastDigit = val - ((val / 10) * 10);	//val%10
		let c = lastDigit + 48;	//('0'==48) I turn my (digit-->'digit') 
		
		if(val < 10) {	
			do appendChar(c);
		} else {	
			let val = val/10;
			do int2String(val);
			do appendChar(c);
		}
		return;
    }

    /** Returns the new line character. */
    function char newLine() {
		return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
		return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
		return 34;
    }
}
